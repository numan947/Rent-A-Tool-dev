name: Backend Pipeline

on:
  push:
    branches:
      - cicdpipeline
    paths:
      - 'rent-a-tool/**'
      - 'docker/backend/**'
      - 'docker-compose.yaml'
      - '.github/workflows/pipeline-backend.yaml'

jobs:
  compile:
    runs-on: self-hosted
    name: Compile project
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0


      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Compile project
        run: | 
          cd rent-a-tool
          chmod +x mvnw
          ./mvnw clean compile

#  unit-tests:
#    runs-on: ubuntu-latest
#    name: Run unit tests
#    steps:
#        - name: Checkout
#          uses: actions/checkout@v4
#          with:
#            fetch-depth: 0
#
#        - name: Set up JDK
#          uses: actions/setup-java@v4
#          with:
#            java-version: '21'
#            distribution: 'corretto'
#        - name: Run unit tests
#          run: |
#            cd rent-a-tool
#            chmod +x mvnw
#            ./mvnw clean test

  build:
    runs-on: self-hosted
    name: Build backend
    needs: [compile]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Build project
        run: |
          cd rent-a-tool
          chmod +x mvnw
          ./mvnw clean package -DskipTests

  build-docker-image:
    runs-on: self-hosted
    name: Build Docker image
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
      - name: Extract project version
        id: extract_version
        run: |
          cd rent-a-tool
          echo "VERSION=$(./mvnw -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: rent-a-tool
          file: docker/backend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/rent-a-tool-backend:${{ steps.extract_version.outputs.VERSION }},${{ secrets.DOCKERHUB_USERNAME }}/rent-a-tool-backend:latest
          build-args: |
            PROFILE=dev
            APP_VERSION=${{ steps.extract_version.outputs.VERSION }}
